# Port of HTTP(S) proxy server on the local end
# port: 7890 cbffdd683cd64e098d3bd4c016bb3c4c

# Port of SOCKS5 proxy server on the local end
# socks-port: 7891

# Transparent proxy server port for Linux and macOS
# redir-port: 7892

# HTTP(S) and SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to local-end server from
# other LAN IP addresses
allow-lan: false

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: true

# RESTful web API listening address
external-controller: 127.0.0.1:9090

find-process-mode: always
global-client-fingerprint: chrome

geodata-loader: standard

geodata-mode: true
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"


profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true

tun:
  enable: true
  stack: gvisor
  dns-hijack:
    - 'any:53'
  auto-route: true
  auto-detect-interface: true

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment, only works
# when `dns.enhanced-mode` is `redir-host`.
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names has a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  'mtalk.google.com': 108.177.125.188
  't.cn': 203.107.55.116
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# DNS server settings
# This section is optional. When not present, DNS server will be disabled.
dns:
  enable: true
  listen: 0.0.0.0:53
  prefer-h3: true
  nameserver-policy:
  # '＋.yicanny.com': [https://1.0.0.1/dns-query]
  # ipv6: false # when false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 119.29.29.29
    - 1.0.0.1
  enhanced-mode: fake-ip # or fake-ipredir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
  #   - '*.lan'
  #   - localhost.ptlogin2.qq.com
    - 'dns.msftncsi.com'
    - 'www.msftncsi.com'
    - 'www.msftconnecttest.com'
  
  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - https://1.12.12.12/dns-query
# DNS over HTTPS

  proxy-server-nameserver:
    - 'https://1.0.0.1/dns-query#DIRECT&h3=true'

  # When `fallback` is present, the DNS server will send concurrent requests
  # to the servers in this section along with servers in `nameservers`.
  # The answers from fallback servers are used when the GEOIP country
  # is not `CN`.
  fallback:
    # - https://8.8.4.4/dns-query
    - https://1.0.0.1/dns-query
    # - 94.140.14.141

  # If IP addresses resolved with servers in `nameservers` are in the specified
  # subnets below, they are considered invalid and results from `fallback`
  # servers are used instead.
  #
  # IP address resolved with servers in `nameserver` is used when
  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.
  #
  # If `fallback-filter.geoip` is false, results from `fallback` nameservers
  # are always used, and answers from `nameservers` are discarded.
  #
  # This is a countermeasure against DNS pollution attacks.
  # fallback-filter:
    # geoip: true
    # ipcidr:
      # - 240.0.0.0/4

proxies:
# 支持的协议及加密算法示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md
  - name: "us cc hy2"
    type: hysteria2
    server: 74.48.95.50
    port: 31108
    password: 64db2a61-4296-4747-8f50-017201a4c5e4
    #obfs: freekkk
    alpn: 
      - h3
    up: 60
    down: 300
    udp: true
    sni: yicanny.com
    skip-cert-verify: false
    
  - name: "us cc tuic"
    server: yicanny.com
    port: 22785
    type: tuic
    uuid: 64db2a61-4296-4747-8f50-017201a4c5e4
    password: 64db2a61-4296-4747-8f50-017201a4c5e4
    disable-sni: false
    reduce-rtt: true
    request-timeout: 8000
    udp-relay-mode: native
    alpn: [h3]
    ongestion-controller: bbr
    
  - name:  rn tuic us
    server: rn.yicanny.com
    port: 47777
    type: tuic
    uuid: b3c76f0e-f2c6-4518-9ddc-b21b3339d550
    password: b3c76f0e-f2c6-4518-9ddc-b21b3339d550
    disable-sni: false
    reduce-rtt: true
    request-timeout: 8000
    udp-relay-mode: native
    alpn: [h3]
    ongestion-controller: bbr


    
  # Shadowsocks(Websocket + TLS)
  - name: rn hy2 us
    type: hysteria2
    server: 206.217.143.7
    port: 47976
    password: b3c76f0e-f2c6-4518-9ddc-b21b3339d550
    #obfs: freekkk
    alpn: 
      - h3
    up: 60
    down: 300
    udp: true
    sni: rn.yicanny.com
    skip-cert-verify: false

  # VMess(Websocket + TLS)
  - name: "kr hy2"
    type: hysteria2
    server: 3.39.194.232
    port: 40795
    password: c8068e04-e3d7-4e89-a551-311ad762b87f
    #obfs: freekkk
    alpn: 
      - h3
    up: 60
    down: 300
    udp: true
    sni: aws.yicanny.com
    skip-cert-verify: false

  # Trojan
  - name: "kr tuic"
    server: aws.yicanny.com
    port: 44645
    type: tuic
    uuid: c8068e04-e3d7-4e89-a551-311ad762b87f
    password: c8068e04-e3d7-4e89-a551-311ad762b87f
    disable-sni: false
    reduce-rtt: true
    request-timeout: 8000
    udp-relay-mode: native
    alpn: [h3]
    ongestion-controller: bbr


      
# 服务器节点订阅
proxy-providers:
  # name: # Provider 名称
  #   type: http # http 或 file
  #   path: # 文件路径
  #   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
  #   interval: # 自动更新间隔，仅在类型为 HTTP 时可用
  #   health-check: # 健康检查选项从此处开始
  #     enable:
  #     url: 
  #     interval: 

  #
  # 「url」参数填写订阅链接
  #
  # 订阅链接可以使用 API 进行转换，如：https://dove.589669.xyz/web
  #
  #

  # 此处只是订阅示例，如果没有订阅链接的使用需求，此处及 proxy-groups 的相关内容可删除

  MList: #「冲鸭机场」订阅
    type: http
    url: "https://jvici9hr.doggygo.top:8443/api/v1/client/5295fab587267d295b5bf37fcc3bf86c?flag=clashmeta" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/MList.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204

  YList: #「冲鸭机场」订阅
    type: http
    url: "https://raw.githubusercontent.com/ldh1983/sub2/master/README.md" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/YList.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
      
  MyList: #「冲鸭机场」订阅
    type: http
    url: "https://api.v1.mk/sub?target=clash&url=https%3A%2F%2F1808.netlify.app&insert=false&emoji=true&list=true&udp=true&tfo=false&expand=true&scv=false&fdn=false&new_name=true" # 放机场订阅链接
    interval: 3600
    path: ./Proxy/MyList.yaml # 注意此处文件名不可相同
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204
  
proxy-groups:
# 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md

#
# 策略组说明
#
# 「MATCH」类似 Surge 的「Final」，此处用于选择白名单模式(PROXY 策略)和黑名单模式(DIRECT 策略)
#
# 「Streaming」和「StreamingSE」比较好理解，有专用于流媒体的节点就设置到其中，如果没有「StreamingSE」的需求可以连带 Rule 部分一起删掉，「Streaming」需至少保留 Rule，用「PROXY」即可。
#
# 「PROXY」是代理规则策略，它可以指定为某个节点或嵌套一个其他策略组，如：「自动测试」、「Fallback」或「负载均衡」的策略组，关于这 3 个策略组的具体示例可以看官方示例：https://github.com/Dreamacro/clash
#

  # 注意此处的「use」而不是「proxies」，当然也可以不用在此先嵌套一个策略组进行选择，可以直接使用，如
  #
  # # 代理节点选择
  # - name: "PROXY"
  #   type: select
  #   use:
  #     - DuckDuckGo # 嵌套使用订阅节点策略组
  #   proxies:
  #     - Fallback
  #     - 1
  #     - 2
  #     - 3
  #
  # 但如果订阅节点很多选起来就很麻烦，不如先嵌套一个策略组进行手动或自动的选择。

  # 手动选择订阅节点

  # Fallback 比较实用的策略组类型，用于测试服务器节点的可用性，当第一个节点不可用时切换到第二个，以此类推。
    
  # 代理节点选择
  - name: "PROXY"
    type: select
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other

      
      
  - name: "UDP"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Star+.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
       # 嵌套使用订阅节点策略组
       
  - name: "telegram"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT
      

  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道别动
  - name: "MATCH"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  - name: "google"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  # 国际流媒体服务
  - name: "Streaming"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      # - US

  - name: "Spotify"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      # - US
      
  - name: "Apple"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  # 中国流媒体服务（面向海外版本）
  # 用于观看部分国内流媒体面向港澳台的地区的限定内容，此处应放港澳台节点，如果没有此需求可删除此处策略组及相关规则
  - name: "StreamingSE"
    type: select
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingSE.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  - name: "microsoft"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  - name: "H"
    type: select
    icon:  https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/HC.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY

  - name: "gfw"
    type: select
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Qure.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  - name: "!cn"
    type: select
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
    include-all: true
    proxies:
      - Url-test
      - Fallback
      - HK
      - TW
      - JP
      - US
      - KR
      - 新家坡
      - other
      - PROXY
      - DIRECT

  - name: "Fallback"
    type: fallback 
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Available.png
    include-all: true
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

  - name: "Url-test"
    type: url-test 
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png
    include-all: true
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

  - name: "HK"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
    include-all-providers: true
    filter: "(?i)港|hk|hongkong|hong kong"

  - name: "TW"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
    include-all-providers: true
    filter: "(?i)台|tw|taiwan"

  - name: "新家坡"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
    include-all-providers: true
    filter: "(?i)(新加坡|sg|singapore)"

  - name: "JP"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
    include-all-providers: true
    filter: "(?i)日本|jp|japan"

  - name: "US"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
    include-all-providers: true
    filter: "(?i)美|us|unitedstates|united states"
    proxies:
    - us cc hy2
    - us cc tuic
    - rn hy2 us
    - rn tuic us

  - name: "KR"
    type: url-test
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
    include-all-providers: true
    proxies:
    - kr hy2
    - kr tuic

    filter: "(?i)韩|kr|korean"

  - name: "other"
    type: fallback
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Server.png
    include-all-providers: true
    filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新加坡|sg|singapore|美|us|unitedstates)).*"
     
# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider

rule-providers:
# name: # Provider 名称
#   type: http # http 或 file
#   behavior: classical # 或 ipcidr、domain
#   path: # 文件路径
#   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
#   interval: # 自动更新间隔，仅在类型为 HTTP 时可用 
  秋风广告规则:
    type: http
    behavior: domain
    format: yaml
    path: ./rule_providers/AWAvenue-Ads-Rule-Clash.yaml
    #此处“/rule_providers”自行参考
    url: "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml"
    interval: 60480

  Unbreak:
    type: http
    behavior: classical
    path: ./RuleSet/Unbreak.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Unbreak.yaml
    interval: 86400
    
  YouTubeMusic:
    type: http
    behavior: classical
    path: ./RuleSet/YouTubeMusic.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Music/YouTubeMusic.yaml
    interval: 86400

  Spotify:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Music/Spotify.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Music/Spotify.yaml
    interval: 86400
    
  UDP:
    type: http
    behavior: classical
    path: ./RuleSet/UDP.yaml
    url: https://raw.githubusercontent.com/ldh1983/Profiles/master/Clash/RuleSet/UDP.yaml
    interval: 86400
    
  telegram:
    type: http
    behavior: classical
    path: ./RuleSet/telegram.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/Telegram/Telegram.yaml
    interval: 86400
    
  Apple:
    type: http
    behavior: classical
    path: ./RuleSet/Apple.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/Apple/Apple.yaml
    interval: 86400
    
  Streaming:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/Streaming.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/Streaming.yaml
    interval: 86400

  StreamingSE:
    type: http
    behavior: classical
    path: ./RuleSet/StreamingMedia/StreamingSE.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/StreamingMedia/StreamingSE.yaml
    interval: 86400

  Global:
    type: http
    behavior: classical
    path: ./RuleSet/Global.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Global.yaml
    interval: 86400

  China:
    type: http
    behavior: classical
    path: ./RuleSet/China.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/China.yaml
    interval: 86400

  ChinaIP:
    type: http
    behavior: ipcidr
    path: ./RuleSet/Extra/ChinaIP.yaml
    url: https://raw.githubusercontent.com/DivineEngine/Profiles/master/Clash/RuleSet/Extra/ChinaIP.yaml
    interval: 86400

# 规则
rules:
  - RULE-SET,秋风广告规则,REJECT
  - GEOSITE,category-ads-all,REJECT
  #此处“REJECT”分组仅为示例参考，具体分组请根据实际情况自行配置
  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(GEOSITE,geolocation-!cn),REJECT # quic
  - DOMAIN-KEYWORD,oracle,DIRECT
  - DOMAIN-KEYWORD,gnews,MATCH
  - DOMAIN-KEYWORD,himalaya,H
  #- DOMAIN-KEYWORD,google,PROXY
  #- DOMAIN,youtubei.googleapis.com,PROXY
  #- DOMAIN,music.youtube.com,PROXY
  # Unbreak
  - PROCESS-NAME, com.gettr.gettr,UDP
  - PROCESS-NAME, com.twitter.android,PROXY
  - GEOSITE,twitter,PROXY
  - RULE-SET,Unbreak,PROXY
  - GEOSITE,discord,PROXY
  
  - RULE-SET,UDP,UDP
  
  - PROCESS-NAME, com.google.android.apps.youtube.music,StreamingSE
  - PROCESS-NAME,com.google.android.youtube.tvmusic,StreamingSE
  - PROCESS-NAME, Telegram.exe, telegram
  - PROCESS-NAME, YouTube Music.exe, StreamingSE
  #- PROCESS-NAME, com.okinc.okex.gp, PROXY
  #- RULE-SET,YouTubeMusic,ymusic
  
  - RULE-SET,Apple,Apple
  
  - RULE-SET,telegram,telegram
  - RULE-SET,Spotify,Spotify
  
  # Global Area Network

  # (Streaming Media)
  - RULE-SET,Streaming,Streaming

  # (StreamingSE)
  - RULE-SET,StreamingSE,StreamingSE

  - GEOSITE,google,google

  # (DNS Cache Pollution) / (IP Blackhole) / (Region-Restricted Access Denied) / (Network Jitter)
  - RULE-SET,Global,PROXY

  - GEOSITE,microsoft,microsoft

  #- GEOSITE,icloud@cn,DIRECT
  #- GEOSITE,apple@cn,DIRECT
  #- GEOSITE,apple-cn,DIRECT
  #- GEOSITE,microsoft@cn,DIRECT
  - GEOSITE,facebook,PROXY
  - GEOSITE,youtube,Streaming
  - GEOSITE,geolocation-cn,DIRECT
  - GEOSITE,gfw,gfw
  - GEOSITE,geolocation-!cn,!cn


  # China Area Network
  - RULE-SET,China,DIRECT

  # Local Area Network
  - IP-CIDR,192.168.0.0/16,DIRECT
  - IP-CIDR,10.0.0.0/8,DIRECT
  - IP-CIDR,172.16.0.0/12,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,100.64.0.0/10,DIRECT
  - IP-CIDR,224.0.0.0/4,DIRECT

  # （可选）使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.yaml 时可禁用下列直至（包括）「GEOIP,CN」规则
  # - RULE-SET,ChinaIP,DIRECT
  # Tencent
  - IP-CIDR,119.28.28.28/32,DIRECT
  - IP-CIDR,182.254.116.0/24,DIRECT
  
  # GeoIP China
  - GEOIP,twitter,PROXY
  - GEOIP,private,DIRECT
  - GEOIP,CN,DIRECT

  - MATCH,MATCH
